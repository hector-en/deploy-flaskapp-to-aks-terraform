# .github/workflows/docker-build-push-deploy.yml
name: Docker Build-Push-Deploy

on:
  push:
    paths:
      - 'src/**' # Trigger only when src/ changes
    branches: [ main, neogenomics ]
    tags: [ 'v*.*.*' ]
  workflow_dispatch: # âœ… Enables manual triggering

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout Full Repository
      uses: actions/checkout@v4
      with:
        fetch-depth: 0  # Ensure full repository is cloned

    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Log in to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}

    - name: Determine Version Tag
      id: version
      # Docker tags align with Git tags:  v1.2.3 -> 1.2.3 & feature/new-ui -> feature-new-ui
      run: |
        if [[ $GITHUB_REF == refs/tags/* ]]; then
          VERSION="${GITHUB_REF#refs/tags/}"
          SANITIZED_VERSION="${VERSION//v/}"          # Remove "v"
          SANITIZED_VERSION="${SANITIZED_VERSION//\//-}"  # Replace "/" with "-"
          echo "TAG_VERSION=$SANITIZED_VERSION" >> $GITHUB_ENV
        else
          echo "TAG_VERSION=latest" >> $GITHUB_ENV
        fi
        
    - name: Install Ansible
      run: |
        sudo apt update
        sudo apt install -y ansible

    - name: Debug Directory Structure
      run: ll -R ${{ github.workspace }}//src
    
    - name: Change directory src access
      run: |
        sudo chown -R $(whoami):$(whoami) ${{ github.workspace }}/src
    
    - name: Run Ansible Playbook
      run: |
        cd ${{ github.workspace }}  # Ensure we're in the right directory
        ansible-playbook -i localhost, ansible/playbooks/build/docker-build-push.yml -e "build_path=${{ github.workspace }}/src"
      env:
        VERSION_TAG: ${{ env.TAG_VERSION }}  # Pass the sanitized tag
        DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
        DOCKERHUB_TOKEN: ${{ secrets.DOCKERHUB_TOKEN }}

  #deploy:
  #  needs: build-and-push
  #  runs-on: ubuntu-latest
  #  steps:
  #    - name: Checkout Code
  #      uses: actions/checkout@v4
#
  #    - name: Determine Terraform Workspace
  #      id: tf-workspace
  #      run: |
  #        if [[ $GITHUB_REF == refs/tags/* ]]; then
  #          echo "TERRAFORM_WORKSPACE=prod" >> $GITHUB_ENV
  #        else
  #          echo "TERRAFORM_WORKSPACE=testing" >> $GITHUB_ENV
  #        fi
#
  #    - name: Deploy to Cluster
  #      run: |
  #        chmod +x deploy.sh
  #        ./deploy.sh ${{ env.TERRAFORM_WORKSPACE }}
  #      env:
  #        # Azure credentials for AKS access
  #        AZURE_CREDENTIALS: ${{ secrets.AZURE_CREDENTIALS }}
